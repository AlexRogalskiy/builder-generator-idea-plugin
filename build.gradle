apply plugin: 'java'
apply plugin: 'code-quality'
apply plugin: 'idea'
apply from: 'https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle'

ideaInstallationPath = 'C:/Program Files (x86)/JetBrains/IntelliJ IDEA Community Edition 11.0'
ideaJdk = 'IDEA IC-111.69'
sourceCompatibility = 1.6

idea {
    module {
        iml {
            whenMerged { module ->
                removeIdeaJdkDependencies(module)
            }
            withXml {
                def module = it.asNode()
                changeModuleType(module)
                removeUnnecessaryComponent(module)
                appendRequiredComponent(module)
                changeComponentWithNewModuleRootManager(module)
            }
        }
    }
}


configurations {
    pmdConf
}

task pmd << {
    println 'Running PMD static code analysis'
    ant {
        taskdef(name: 'pmd', classname: 'net.sourceforge.pmd.ant.PMDTask', classpath: configurations.pmdConf.asPath)

        pmd(shortFilenames: 'true', failonruleviolation: 'true', rulesetfiles:
                '''rulesets/basic.xml, rulesets/codesize.xml, rulesets/coupling.xml, rulesets/imports.xml,
                rulesets/strictexception.xml, rulesets/strings.xml, rulesets/sunsecure.xml,
                rulesets/typeresolution.xml, rulesets/unusedcode.xml''') {
            formatter(type: 'text', toConsole: 'true')
            fileset(dir: "src/main/java") {
                include(name: '**/*.java')
            }
            fileset(dir: "src/test/java") {
                exclude(name: '**/*.java')
            }
        }
    }
}

checkstyleMain.dependsOn {
    pmd
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: ideaInstallationPath + '/lib', include: '*.jar')
    testCompile 'org.mockito:mockito-all:1.9.0-rc1'
    testCompile 'org.powermock:powermock-module-junit4:1.4.10'
    testCompile 'org.powermock:powermock-api-mockito:1.4.10'
    testCompile 'org.springframework:spring-test:3.0.6.RELEASE'
    testCompile 'org.springframework:spring-core:3.0.6.RELEASE'

    pmdConf 'pmd:pmd:4.3'

    emma "emma:emma:2.0.5312"
    emma "emma:emma_ant:2.0.5312"
}

metaInf << files('/META-INF/plugin.xml')


def removeIdeaJdkDependencies(def module) {
    module.dependencies.removeAll(module.dependencies.findAll {it.classes.url[0].contains(ideaInstallationPath)})
}

def changeModuleType(def module) {
    module.@type = 'PLUGIN_MODULE'
}

def removeUnnecessaryComponent(def module) {
    module.remove(module.component.find { it.@name == 'ModuleRootManager'})
}

def appendRequiredComponent(def module) {
    module.appendNode('component', ['name': 'DevKit.ModuleBuildProperties', 'url': 'file://$MODULE_DIR$/META-INF/plugin.xml'])
}

def changeComponentWithNewModuleRootManager(def module) {
    def componentWithNewModuleRootManager = module.component.find { it.@name == 'NewModuleRootManager'}
    componentWithNewModuleRootManager.remove(componentWithNewModuleRootManager.orderEntry.find { it.@type == 'inheritedJdk'})
    componentWithNewModuleRootManager.appendNode('orderEntry', ['type': 'jdk', 'jdkName': ideaJdk, 'jdkType': 'IDEA JDK'])
}